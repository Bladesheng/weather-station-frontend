(()=>{"use strict";const e="meteostanice-pwa-v1677075295191",t=["/","/index.html","/app.js","/favicon.ico","/manifest.webmanifest"];"bladesheng.github.io"===self.location.host&&t.forEach(((e,n)=>{t[n]=`/weather-station-frontend${e}`})),self.addEventListener("install",(n=>{n.waitUntil((async()=>{const n=await caches.open(e);console.log("[SW] Installing new service worker and caching all files"),await n.addAll(t)})())})),self.addEventListener("fetch",(n=>{const a=new URL(n.request.url),s=t.includes(a.pathname),c="image"===n.request.destination;(s||c)&&n.respondWith((async()=>{console.log(`[SW] Fetching resource: ${n.request.url}`);const t=await caches.open(e),a=await t.match(n.request);if(a)return a;const s=await fetch(n.request);return console.log(`[SW] Caching new resource: ${n.request.url}`),t.put(n.request,s.clone()),s})()),a.pathname,a.pathname})),self.addEventListener("activate",(t=>{console.log("[SW] Activating new service worker"),t.waitUntil((async()=>{const t=await caches.keys();for(const n of t)n!==e&&(console.log(`[SW] Deleting old cache: ${n}`),caches.delete(n))})())}))})();